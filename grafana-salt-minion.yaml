# What to expect:
# A Cloud Server with a self-contained Grafana installation deployed by Salt
# that serves metrics from the Rackspace Cloud Metrics API. In addition,
# grafanizer will be installed and will generate several dashboards.
#
# Grafana will be protected with ssl and basic authentication.
#
heat_template_version: 2013-05-23

description: >
  Puts together a server that will run Grafana using Cloud Metrics data.

parameter_groups:
  - label: 'Server Settings'
    parameters:
      - flavor
      - image
      - host_name
      - keyname
      - rax_tenant
      - rax_username
      - rax_apikey
  - label: 'Salt Settings'
    parameters:
      - salt_master
      - salt_network
  - label: 'Apache Settings'
    parameters:
      - apache_auth_user

parameters:
  image:
    default: 'Ubuntu 14.04 LTS (Trusty Tahr) (PV)'
    label: 'Operating System'
    type: string
    description: 'Server image that will be used'
    constraints:
      - description: 'supported os versions'
        allowed_values:
          - 'Ubuntu 14.04 LTS (Trusty Tahr) (PV)'
  flavor:
    default: '2GB Standard Instance'
    label: 'Server Size'
    type: string
    description: 'Cloud Server flavor (size) to use'
    constraints:
      - description: 'supported server sizes. should have at least 2G RAM'
        allowed_values:
          - '2 GB Performance'
          - '4 GB Performance'
          - '8 GB Performance'
          - '15 GB Performance'
          - '30 GB Performance'
          - '2GB Standard Instance'
          - '4GB Standard Instance'
          - '8GB Standard Instance'
          - '15GB Standard Instance'
          - '30GB Standard Instance'
  host_name:
    default: grafana
    type: string
    description: 'Server hostname'
    label: 'Server hostname'
  salt_master:
    type: string
    description: 'Address of salt master'
    label: Salt Master Address
  salt_network:
    type: string
    description: 'Name of the private network salt traffic takes place on'
    label: Salt Network
  keyname:
    type: string
    description: Name of keypair for ssh access
    label: Keyname
  apache_auth_user:
    default: grafana
    type: string
    description: 'User name used to authenticate into Apache (which serves Grafana).'
    label: 'Username'
  rax_tenant:
    default: 'notavalidtenantdkw93ddkwl'
    type: string
    description: 'Rackspace tenant ID'
    label: 'tenant ID'
  rax_username:
    default: 'notavaliduserskldk2e'
    type: string
    description: 'Rackspace user name'
    label: 'username'
  rax_apikey:
    default: 'notavalidapikeykslkdjlkj2'
    type: string
    description: 'Rackspace account API key'
    label: 'API key'

outputs:
  apache_auth_user:
    description: 'Grafana auth user.'
    value:
      get_param: apache_auth_user
  apache_auth_password:
    description: 'Grafana auth password.'
    value: { get_attr: [apache_auth_password, value ] }
  public_ip:
    description: IP Address
    value: { get_attr: [cloud_server, accessIPv4] }

resources:
  cloud_server:
    type: 'Rackspace::Cloud::Server'
    depends_on: [ apache_auth_password ]
    properties:
      key_name: { get_param: keyname }
      flavor: { get_param: flavor }
      name:
        str_replace:
          template: grafana-host_name
          params:
            host_name: { get_param: host_name }
      networks:
        - network: 00000000-0000-0000-0000-000000000000
        - network: 11111111-1111-1111-1111-111111111111
        - network: { get_param: salt_network }
      image: { get_param: image }
      user_data_format: RAW
      config_drive: true
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            sleep 120
            curl -L http://bootstrap.saltstack.org | sh -s
            cat > /etc/salt/grains << EOL
            roles:
              - grafana
            rackspace:
              username: rax_username
              tenant: rax_tenant
              api_key: rax_apikey
            web_username: apache_auth_user
            web_password: apache_auth_password
            EOL
            chmod 600 /etc/salt/grains

            echo master: salt_master >> /etc/salt/minion
            service salt-minion restart
            echo "Salt minion restarted"

          params:
            apache_auth_user: { get_param: apache_auth_user }
            apache_auth_password: { get_attr: [apache_auth_password, value ] }
            rax_tenant: { get_param: rax_tenant }
            rax_username: { get_param: rax_username }
            rax_apikey: { get_param: rax_apikey }
            salt_master: { get_param: salt_master }
  apache_auth_password:
    type: 'OS::Heat::RandomString'
    properties:
      length: 16
      sequence: lettersdigits
